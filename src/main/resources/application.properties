server.port=8090
springdoc.swagger-ui.path=/docs.html

# Database
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
spring.datasource.username=postgres
spring.datasource.password=123
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
logging.level.org.hibernate.orm.jdbc.bind=trace
logging.level.org.hibernate.type=trace
logging.level.org.hibernate.stat=debug

keycloak.username=tortoise-keeper
keycloak.password=12345
keycloak.realm=TortoiseManager
keycloak.uri=http://localhost:8050
keycloak.auth-server-url=http://localhost:8050/auth


springdoc.swagger-ui.oauth.clientId=${keycloak.username}
springdoc.swagger-ui.oauth.clientSecret=${keycloak.password}

spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.uri}/realms/${keycloak.realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

# Spring Security OAuth2 Client Configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.uri}/realms/${keycloak.realm}
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.username}
spring.security.oauth2.client.registration.keycloak.client-secret=${keycloak.password}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.scope=openid

# JWT Configuration
jwt.auth.converter.resource-id=tortoise-keeper
jwt.auth.converter.principal-attribute=principal_username

# Logging Configuration
logging.level.org.springframework.security=DEBUG

# Enable or disable security
security.enabled=true


